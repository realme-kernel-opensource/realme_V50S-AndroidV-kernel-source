/* Copyright (c) 2018, The Linux Foundation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

&pio {
        sia81xx_gpio_L: sia81xx_gpio_L {
                pins_cmd_dat {
                        pinmux = <PINMUX_GPIO151__FUNC_GPIO151>;
                        slew-rate = <1>;
                        bias-disable;
                };
        };

        sia81xx_gpio_R: sia81xx_gpio_R {
                pins_cmd_dat {
                        pinmux = <PINMUX_GPIO150__FUNC_GPIO150>;
                        slew-rate = <1>;
                        bias-disable;
                };
        };

        fsa_hs_det: fsa_hs_det {
                pins_cmd_dat {
                        pinmux = <PINMUX_GPIO32__FUNC_GPIO32>;
                        slew-rate = <1>;  /*direction 0:in, 1:out*/
                        output-high;
                };
        };

	i2c4_mode_default: i2c4_mode_default {
                pins_cmd_dat {
                        pinmux = <PINMUX_GPIO135__FUNC_SCL4>,
                                 <PINMUX_GPIO136__FUNC_SDA4>;
                        bias-pull-up = <MTK_PULL_SET_RSEL_110>;
                };
	};
};

&odm {
       sia81xx_L: sia81xx@L{
                compatible = "si,sia81xx";
                si,si_pa_type = "sia81x9";
                si,si_pa_reset = <&pio 150 0>;
                si,si_pa_owi = <&pio 150 0>;
                pinctrl-names = "si_pa_gpio";
                pinctrl-0 = <&sia81xx_gpio_L>;
                si,si_pa_disable_pin = <0>;
                channel_num = <0>;
                owi_mode = <1>;
        };
        sia81xx_R: sia81xx@R{
                compatible = "si,sia81xx";
                si,si_pa_type = "sia81x9";
                si,si_pa_reset = <&pio 151 0>;
                si,si_pa_owi = <&pio 151 0>;
                pinctrl-names = "si_pa_gpio";
                pinctrl-0 = <&sia81xx_gpio_R>;
                si,si_pa_disable_pin = <0>;
                channel_num = <1>;
                owi_mode = <1>;
        };
};

&i2c4 {
        #address-cells = <1>;
        #size-cells = <0>;
        clock-frequency = <400000>;
        pinctrl-names = "default";
        pinctrl-0 = <&i2c4_mode_default>;

        sia81xx_i2c_L: sia81xx_i2c@L {
                compatible = "si,sia81xx-i2c";
                reg = <0x28>;
                si,sipa-dev = <&sia81xx_L>;
        };
        sia81xx_i2c_R: sia81xx_i2c@R {
                compatible = "si,sia81xx-i2c";
                reg = <0x29>;
                si,sipa-dev = <&sia81xx_R>;
        };
};

&i2c6{
        fsa4480: fsa4480@43 {
                compatible = "qcom,fsa4480-i2c";
                reg = <0x43>;
                pinctrl-names = "default";
                pinctrl-0 = <&fsa_hs_det>;
                fsa4480,hs-det-gpio = <&pio 32 0>;
                fsa4480,hp-bypass = <1>;
                status = "okay";
        };
};

&sound {
        si,sia81xx-max-num = <2>;
        si,sia81xx-aux-devs = <&sia81xx_L>, <&sia81xx_R>;
        si,sia81xx-aux-devs-prefix = "SpkrLeft", "SpkrRight";
        /* 2024/5/28, add for dual PA special dapm handle to resolve pop sound when PA closing */
        oplus,special-pa-dapm = <1>;
};

&accdet{
        // eint_use_ext_res = <1>;
        // headset-eint-trig-mode = <2>;
        headset-three-key-threshold = <0 80 220 400>;
        hp-eint0-disable = <1>;
};
&speech_usip_mem{
	adsp-phone-call-enh-enable = <0x5>;
};
